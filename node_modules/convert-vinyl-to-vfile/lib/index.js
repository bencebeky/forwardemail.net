'use strict';

var _vfile = require('vfile');

var _vfile2 = _interopRequireDefault(_vfile);

var _vinyl = require('vinyl');

var _vinyl2 = _interopRequireDefault(_vinyl);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * Convert a Vinyl file to a VFile
 * @param {Vinyl} vinyl - a Vinyl file to convert
 * @throws {TypeError} - if vinyl is not a Vinyl file
 * @return {VFile} - VFile version of vinyl
 */
module.exports = function (vinyl) {
  var newVinyl = void 0;

  // When a "Vinyl file" is passed from a Gulp stream
  // Vinyl.isVinyl(vinyl) returns false.
  // This forces a potential Vinyl file to be a Vinyl file.
  if (vinyl) {
    newVinyl = new _vinyl2.default(vinyl);
  }

  if (!_vinyl2.default.isVinyl(newVinyl)) {
    throw new TypeError('Expected a Vinyl file');
  }

  if (newVinyl.isStream()) {
    throw new TypeError('Streams are not supported');
  }

  var contents = newVinyl.contents;
  var path = newVinyl.path;

  return new _vfile2.default({
    path: path,
    contents: contents
  });
};